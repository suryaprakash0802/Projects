## Prerequisites

1. Control Node: A machine where Ansible is installed (e.g., your local machine or a dedicated server).
2. Managed Nodes: Servers you want to configure using Ansible (e.g., remote servers like DigitalOcean, AWS, etc.).
3. SSH Access: Ensure you have SSH access to the managed nodes from the control node.
4. Python: Ansible requires Python on the control node and managed nodes.


Step 1: Install Ansible
On Ubuntu:

sudo apt update
sudo apt install ansible -y

Step 2: Configure SSH Access
Generate SSH Key Pair (if not already generated):

ssh-keygen -t rsa -b 4096 -C username@server_ip

Copy SSH Key to Managed Nodes:
ssh-copy-id username@serer_ip

Step 3: Set Up Ansible Inventory
Create an Inventory File:
Create a file named hosts or inventory and list your managed nodes.

[webservers]
web1 ansible_host=192.168.1.101 ansible_user=user
web2 ansible_host=192.168.1.102 ansible_user=user

[dbservers]
db1 ansible_host=192.168.1.201 ansible_user=user

Step 4: Create Ansible Playbooks
Create a Directory for Playbooks

mkdir ansible-playbooks
cd ansible-playbooks

Create a Playbook for Software Installation:
Create a file named install_software.yml

---
- name: Install and update software
  hosts: webservers
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Install Nginx
      apt:
        name: nginx
        state: present

- name: Install MySQL
  hosts: dbservers
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

Run the Playbook:

ansible-playbook -i hosts install_software.yml

Step 5: Troubleshoot Playbook Errors
Verbose Output:
Use -v for verbose output to get more information about errors.

ansible-playbook -i hosts install_software.yml -v

Common Issues:

- SSH Connectivity: Ensure SSH keys are correctly set up.
- Sudo Permissions: Ensure the ansible_user has sudo permissions.
- Package Manager Issues: Ensure the correct package manager is used (apt, yum, etc.).


---
- name: Install and configure web servers
  hosts: webservers
  become: yes
  vars:
    nginx_package: nginx

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Nginx
      apt:
        name: "{{ nginx_package }}"
        state: present
      notify:
        - Restart Nginx

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

- name: Install and configure database servers
  hosts: dbservers
  become: yes
  vars:
    mysql_package: mysql-server

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MySQL server
      apt:
        name: "{{ mysql_package }}"
        state: present
